test: matrix.cpp main.cpp
	g++ -o matrices matrix.cpp main.cpp
	./matrices c
	./matrices "{1, 2, 3}, {4, 5, 6}, {10, 0, 3}" "{3, 4, 6}, {7, 8, 5}, {3, 10, 4}" +
	./matrices "{1, 1, 1}, {1, 1, 1}" "{1, 1}, {1, 1}" +
	./matrices "{1, 3, 5}, {0, 1, 0}" "{3, 5}, {3, 6}, {1, 8}" \*
	./matrices "{3, 5}, {3, 6}, {1, 8}" "{3, 5}, {3, 6}, {1, 8}" \*
	./matrices "{1, 2}, {2, 3}" "{1, 2.00001}, {2, 3}" =
	./matrices "{1, 2}, {2, 3}" "{1, 2.01}, {2, 3}" =
	./matrices "{1, 1}, {1, 1}" "{1, 1, 0}, {1, 1, 0}" =
	./matrices "{1, 1}, {1, 1}" "{2, 2}, {3, 3}" \|
	./matrices "{1, 1, 1}, {1, 1, 1}, {1, 1, 1}" "{2, 1, 3}, {2, 2, 1}, {1, 6, 7}" \|
	./matrices "{1, 2, 1}, {1, 3, 1}, {2, 1, 5}" "{1, 2, 3}, {4, 2, 1}, {3, 2, 1}" ~^
	./matrices "{1, 4, 5}, {1, 2, 1}, {1, 3, 1}, {2, 1, 5}" "{1, 3}, {4, 1}, {3, 1}" ~^
	./matrices "{2, 4, 1}, {5, 2, 1}, {2, 3, 4}" "{36}, {47}, {37}" $
	./matrices "{2, 5}, {4, 3}" "{25}, {15}" $
	./matrices "{2, -4, 3}, {1, -2, 4}, {3, -1, 5}" "{1}, {3}, {2}" $
clean:
	rm -f matrices


# Пояснение к Makefile
# В Makefile есть две цели: test и clean. Первая (выбирается по умолчанию): скомпилировать программу
# и прогнать через неё тесты. Вторая: "убрать за собой" - удалить исполняемый файл программы.
## main
# У программы есть 2 режима: проверки конструкторов и проверки операций.
# Первый используется либо при вызове программы без аргументов, либо если первый аргумент начинается с
# латинской буквы *c*. Сначала программа прогоняет все конструкторы матриц с корректными параметрами, а потом -
#  с некорректными, выводя диагностические сообщения от исключений.
# Второй используется в противном случае. Первые два параметра при вызове функции - текстовые представления
# матриц, третий (опциональный) - семейство операций, по которым будут прогоняться тесты.
# Семейства:
# 1. \+ или -: +, +=, -, -=
# 2. \*: \*, \*= (на скаляр и на матрицу)
# 3. =: ==, !=
# 4. | или /: | и /
# Если семейство не указано, то пара матриц прогоняется по всем операциям.
